# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

os: linux
dist: jammy
language: rust
services: docker

env:
  global:
    - CRATE_NAME=cccp

jobs:
  include:
    - env: TARGET=x86_64-pc-windows-gnu ENABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu ENABLE_TESTS=1
    - env: TARGET=x86_64-apple-darwin
    - env: TARGET=aarch64-pc-windows-msvc NO_INSTALLER=1

    # OSX
    # - env: TARGET=i686-apple-darwin
    - if: tag IS present
      env: TARGET=aarch64-apple-darwin

    # Windows
    - if: tag IS present
      env: TARGET=i686-pc-windows-gnu
    - if: tag IS present
      env: TARGET=x86_64-pc-windows-msvc
    - if: tag IS present
      env: TARGET=i686-pc-windows-msvc

    # Linux
    - if: tag IS present
      env: TARGET=aarch64-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=aarch64-unknown-linux-musl
    - if: tag IS present
      env: TARGET=arm-unknown-linux-gnueabi
    - if: tag IS present
      env: TARGET=arm-unknown-linux-gnueabihf
    - if: tag IS present
      env: TARGET=arm-unknown-linux-musleabi
    - if: tag IS present
      env: TARGET=arm-unknown-linux-musleabihf
    - if: tag IS present
      env: TARGET=armv7-unknown-linux-gnueabihf
    - if: tag IS present
      env: TARGET=i686-unknown-linux-musl
    - if: tag IS present
      env: TARGET=mips-unknown-linux-musl NO_INSTALLER=1
    - if: tag IS present
      env: TARGET=mips64-unknown-linux-gnuabi64 NO_INSTALLER=1
    - if: tag IS present
      env: TARGET=mipsel-unknown-linux-musl
    - if: tag IS present
      env: TARGET=mips64el-unknown-linux-gnuabi64
    - if: tag IS present
      env: TARGET=powerpc-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=powerpc64-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=powerpc64le-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=x86_64-unknown-linux-musl
    - if: tag IS present
      env: TARGET=riscv64gc-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=i686-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=x86_64-unknown-linux-gnu
    - if: tag IS present
      env: TARGET=s390x-unknown-linux-gnu

    # *BSD
    - if: tag IS present
      env: TARGET=i686-unknown-freebsd
    - if: tag IS present
      env: TARGET=x86_64-unknown-freebsd
    - if: tag IS present
      env: TARGET=x86_64-unknown-netbsd

before_install:
  - set -e

install:
  - rustup self update
  - rustup component add rustfmt
  - source $HOME/.cargo/env || true
  # install binstall
  - curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash
  # install cross w/ binstall
  - cargo binstall cross --git https://github.com/cross-rs/cross --no-confirm --force
  # install docker-buildx-plugin
  - wget https://download.docker.com/linux/ubuntu/dists/jammy/pool/stable/amd64/docker-buildx-plugin_0.11.2-1~ubuntu.22.04~jammy_amd64.deb
  - yes | sudo dpkg -i docker-buildx-plugin_0.11.2-1~ubuntu.22.04~jammy_amd64.deb


before_script:
  # login to docker
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

script: bash ci/script.sh

after_script: set +e

before_deploy: bash ci/before_deploy.sh

deploy:
  edge: true
  token:
    secure: gCv8cVWxx3HL4lFw0gwC5vIl4tyyPTG2ulquxZbrzRBeob6Ys39Rj9KBYis4bY44jXFKNBMbmyCKPGB6l5hoqTCKk2T5evOauWrZm1m2nzzRgeZ5OSKOpFMevO8rJA7Kc52lOvrdBtmhpnNjo9J5FDrc6N28u3TBhZ3DUqhCFMSs6GfXBCLbK7pIGcZeeNSujfoRx9tiF2AdXcbD9Pn3jSXRozvcItjqfjMEyBFqyAhVz4dDvEb/TiCdqyffs7Xr1Er886xEIdDv4i5g6T+SAQDj2+2/8W4nysjArIYMxIRcqDBqaHd07tHPg5AWZDq4Wg9knpzA5Hu7UXv00iSejPsbzElxwHa3oyTF0yIGyldt4qe7/ru593TTOZXS8Cwo7EsYdfUWrfhsl/4otGet/Ta/QaBeHwf6Sx1e6IPstbIwzvfI0jG2VE8yBO4Afb/BkS2Ufwawxt1KoXOP8ES+I+UR05M4shGBvNvZLqCftH7TUPlgpRmZGVz5OOgPi7UFOm19Qf3IPDS/8GlDN+T1wzNQbVTrU+qP6ah0mPEXOwrJeLF2fNDiQzVFgl/mg60osFHHmLwKcAxPzkkZjtCbIt830PRgg43W8yTDERnorvw/IdfLOvu0ngseFER8p8iN16M3IvDcKJ3HKGkURN5gBAqdtLA56HZdAj21uD+waXw=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    tags: true
  provider: releases
  cleanup: false
  draft: true

cache: cargo

before_cache:
  # travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo
  # clean up the cargo registry
  - rm -rf $HOME/.cargo/registry/index
  - rm -rf $HOME/.cargo/registry/cache
  - rm -rf $HOME/.cargo/git/db

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - main

notifications:
  email:
    on_success: never